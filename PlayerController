using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.SceneManagement;

public class PlayerController : MonoBehaviour
{
    private Rigidbody2D rb2d;
    public float speed;
    public float jumpforce;
    public Text countText;
    public Text winText;
    public Text LoseText;
    public Text LivesText;
    Animator Anim;

    bool isHurting;

    private bool facingRight = true;
    private int count;
    private int lives;


    // Start is called before the first frame update
    void Start()
    {

        rb2d = GetComponent<Rigidbody2D>();

        count = 0;
        lives = 3;
        LoseText.text = "";
        winText.text = "";
        Anim = GetComponent<Animator>();
        SetCountText();
        SetLivesText();
        Flip();



    }

    // Update is called once per frame
    void Update()
    {
        PlayerMove();


        if (Input.GetKey("escape"))
            Application.Quit();
    }

    void FixedUpdate()
    {
        float moveHorizontal = Input.GetAxis("Horizontal");

        Vector2 movement = new Vector2(moveHorizontal, 0);

        rb2d.AddForce(movement * speed);

        if (facingRight == false && moveHorizontal > 0)
        {
            Flip();
        }
        else if (facingRight == true && moveHorizontal < 0)
        {
            Flip();
        }




    }

    private void OnTriggerEnter2D(Collider2D other)
    {
        if (other.gameObject.CompareTag("PickUp"))
        {
            other.gameObject.SetActive(false);
            count = count + 1;
            SoundManager.PlaySound("coin");
            SetCountText();
        }
        if (other.gameObject.CompareTag("Enemy"))
        {
            other.gameObject.SetActive(false);
            lives = lives - 1;
            SetLivesText();
            if (lives == 0)
            {
                gameObject.SetActive(false);
            }
        }
        if (other.gameObject.CompareTag("possum"))
        {
            other.gameObject.SetActive(false);
            lives = lives - 1;
            SetLivesText();
            StartCoroutine("Hurt");
        }
    }

    void OnCollisionStay2D(Collision2D collision)
    {
        if (collision.collider.tag == "Ground")
        {
            if (Input.GetKey(KeyCode.UpArrow))
            {
                rb2d.AddForce(new Vector2(0, jumpforce), ForceMode2D.Impulse);

            }
        }

    }

    void SetCountText()
    {
        countText.text = "Count: " + count.ToString();
        if (count >= 4)
        {
            winText.text = "You Win!";
            //SoundManager.PlaySound("victory");
            UnityEngine.SceneManagement.SceneManager.LoadScene("TileMap2");
        }
    }

    void SetLivesText()
    {
        LivesText.text = "Lives: " + lives.ToString();
        if (lives == 0)
        {
            LoseText.text = "You Lose!";
            gameObject.SetActive(false);
            Invoke("delay", 1.0f);

        }
    }

    void Flip()
    {
        facingRight = !facingRight;
        Vector2 Scaler = transform.localScale;
        Scaler.x = Scaler.x * -1;
        transform.localScale = Scaler;
    }

    void PlayerMove()
    {
        if (rb2d.velocity.x != 0)
            GetComponent<Animator>().SetBool("isRunning", true);
        else
            GetComponent<Animator>().SetBool("isRunning", false);

        if (rb2d.velocity.y == 0)
        {
            //GetComponent<Animator>().SetBool("isJumping", false);

        }


        if (rb2d.velocity.y > 1)
            GetComponent<Animator>().SetBool("isJumping", true);
        else
            GetComponent<Animator>().SetBool("isJumping", false);

    }

    IEnumerator Hurt()
    {
        isHurting = true;
        rb2d.velocity = Vector2.zero;

        if (facingRight)
            rb2d.AddForce(new Vector2(-200f, 200f));
        else
            rb2d.AddForce(new Vector2(200f, 200f));

        yield return new WaitForSeconds(0.5f);

        isHurting = false;
    }


    public void delay()
    {
        UnityEngine.SceneManagement.SceneManager.LoadScene("Tilemap");
    }
    
  

}
